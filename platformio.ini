; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = 
	arduino-keeper-esp32c6_devkitc
	arduino-pot-esp32c6_devkitc
	arduino-keeper-esp32s3_devkitc
	arduino-pot-esp32s3_devkitc
workspace_dir = firmware-pio/.pio
include_dir = firmware-pio/include
src_dir = firmware-pio/src
lib_dir = firmware-pio/lib
data_dir = firmware-pio/data
test_dir = firmware-pio/test
boards_dir = firmware-pio/boards
monitor_dir = firmware-pio/monitor
shared_dir = firmware-pio/shared

[shared]
build_flags_keeper = 
	-D CONFIG_APP_NAME=\"keeper\"
	-D CONFIG_APP_KIND_KEEPER=1
	-D CONFIG_SENSORS_DHT_PIN=10
	-D CONFIG_ACTUATORS_FAN_PIN=11
build_flags_pot = 
	-D CONFIG_APP_NAME=\"pot\"
	-D CONFIG_APP_KIND_POT=1
	-D CONFIG_SENSORS_MOISTURE_PIN=15
	-D CONFIG_SENSORS_PH_PIN=20
	-D CONFIG_ACTUATORS_PUMP_PIN=11

[env]
lib_deps = 
	; https://github.com/beegee-tokyo/DHTesp@1.19.0
	https://github.com/PaulStoffregen/OneWire.git@2.3.8
	https://github.com/arduino-libraries/ArduinoMDNS.git#875d963
	https://github.com/arduino-libraries/NTPClient.git#fab3f49
	https://github.com/arduino-libraries/ArduinoMqttClient.git#0a07062
	https://github.com/contrem/arduino-timer.git#2adf6b1
	bblanchon/ArduinoJson@7.4.2
build_flags = 
	-D CONFIG_SENSORS_READ_PERIOD_SECONDS=300
	-D CONFIG_DEVICE_CERTIFICATE_VALIDITY_YEARS=3
	-D CONFIG_SNTP_SERVER_ADDRESS=\"uk.pool.ntp.org\"
	-D CONFIG_AZURE_IOT_DPS_ID_SCOPE=\"0ne00F7ADA0\"

	; -D MQTT_CLIENT_DEBUG=1

[env:arduino-esp32]
platform = https://github.com/pioarduino/platform-espressif32.git#55.03.30
framework = arduino
build_flags = 
	; For boards with two ports, these allow use of the USB/JTAG port which has less noise
	; or funny characters but may need special/official drivers for it.
	-D ARDUINO_USB_MODE=1
	-D ARDUINO_USB_CDC_ON_BOOT=1

	; ; enable scanning for networks
	; -D CONFIG_WIFI_SCAN_NETWORKS=1

extra_scripts = 
	pre:firmware-pio/scripts/version.py

[env:arduino-esp32s3_devkitc]
extends = env:arduino-esp32
; Some of the boards have more flash and/or RAM but here we target the one with the least
; Initially targeted 'esp32-s3-devkitc-1-n32r8v' but did not get enough boards lying around so had to mix.
; A few days later, we had a mix of 'esp32-s3-devkitc-1-n32r8v' (1) and 'esp32-s3-devkitc1-n8r8' (2) but needed an extra
; board to test and there was none other available of the two, so we took the base 'esp32-s3-devkitc-1' (3).
; All the boards have at least 8MB of flash memory.
; External PSRAM is not available on (3) but we do not need that much more RAM.
; board = esp32-s3-devkitc1-n8r8
board = esp32-s3-devkitc-1

[env:arduino-keeper-esp32s3_devkitc]
extends = env:arduino-esp32s3_devkitc
build_flags = 
	${env.build_flags}
	${shared.build_flags_keeper}
	${env:arduino-esp32s3_devkitc.build_flags}

[env:arduino-pot-esp32s3_devkitc]
extends = env:arduino-esp32s3_devkitc
build_flags = 
	${env.build_flags}
	${shared.build_flags_pot}
	${env:arduino-esp32s3_devkitc.build_flags}

[env:arduino-esp32c6_devkitc]
extends = env:arduino-esp32
board = esp32-c6-devkitc-1

[env:arduino-keeper-esp32c6_devkitc]
extends = env:arduino-esp32c6_devkitc
build_flags = 
	${env.build_flags}
	${shared.build_flags_keeper}
	${env:arduino-esp32c6_devkitc.build_flags}

[env:arduino-pot-esp32c6_devkitc]
extends = env:arduino-esp32c6_devkitc
build_flags = 
	${env.build_flags}
	${shared.build_flags_pot}
	${env:arduino-esp32c6_devkitc.build_flags}
