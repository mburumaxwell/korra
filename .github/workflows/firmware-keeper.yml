name: Firmware - Keeper

on:
  push:
    # branches: [main]
    tags: ['firmware-keeper*']
    paths:
      - firmware/keeper/**
      - west-manifest/**
      - .west/**
      - .github/workflows/firmware-keeper.yml
  pull_request:
    branches: [main]
    paths:
      - firmware/keeper/**
      - west-manifest/**
      - .west/**
      - .github/workflows/firmware-keeper.yml
  workflow_dispatch:

permissions:
  contents: write # write required for ncipollo/release-action to create a release
  attestations: write # required for actions/attest-build-provenance
  id-token: write # required for actions/attest-build-provenance

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Zephyr SDK
        uses: zephyrproject-rtos/action-zephyr-setup@v1
        with:
          app-path: ${{ github.workspace }}/west-manifest
          toolchains: arm-zephyr-eabi:xtensa-espressif_esp32s3_zephyr-elf

      - name: Build (ESP32-S3-DevKitC-1)
        run: >
          west build firmware/keeper
          --board esp32s3_devkitc/esp32s3/procpu
          --pristine
          --build-dir firmware/keeper/build/esp32s3_devkitc

      - name: Build (YD-ESP32-S3-DevKitC)
        run: >
          west build firmware/keeper
          --board esp32s3_devkitc/esp32s3/procpu
          --pristine
          --build-dir firmware/keeper/build/yd_esp32s3_devkitc
          --
          -DEXTRA_DTC_OVERLAY_FILE='boards/yd_esp32s3_devkitc_procpu.overlay'

      - name: Collect output
        run: |
          mkdir -p binaries && \

          cp firmware/keeper/build/esp32s3_devkitc/zephyr/zephyr.bin binaries/keeper-esp32s3_devkitc.bin && \
          cp firmware/keeper/build/esp32s3_devkitc/zephyr/zephyr.elf binaries/keeper-esp32s3_devkitc.elf && \

          cp firmware/keeper/build/yd_esp32s3_devkitc/zephyr/zephyr.bin binaries/keeper-yd_esp32s3_devkitc.bin && \
          cp firmware/keeper/build/yd_esp32s3_devkitc/zephyr/zephyr.elf binaries/keeper-yd_esp32s3_devkitc.elf && \

          echo 'Done'

      - name: Upload Artifact (binaries)
        uses: actions/upload-artifact@v4
        with:
          path: binaries
          name: binaries
          retention-days: 1

      - name: Provenance Attestation
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: |
            ${{ github.workspace }}/binaries/*.bin
            ${{ github.workspace }}/binaries/*.hex

      - name: Upload Release Artifact
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: '${{ github.workspace }}/binaries/*.bin,${{ github.workspace }}/binaries/*.hex'
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitNameDuringUpdate: true
          tag: ${{ github.ref_name }}

      # a web endpoint can be triggered at this point to push to devices
