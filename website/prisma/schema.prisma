// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum BoardType {
  esp32s3_devkitc
  frdm_rw612
  nrf7002dk
}

enum DeviceUsage {
  pot
  keeper
}

enum FirmwareFramework {
  zephyr
  arduino
  espidf
}

// list of known firmware
model AvailableFirmware {
  id             String            @id @default(cuid())
  created        DateTime          @default(now())
  updated        DateTime          @updatedAt
  board          BoardType
  usage          DeviceUsage
  framework      FirmwareFramework
  versionValue   Int
  versionSemver  String
  url            String
  attestation    String
  hash           String
  signature      String
  DeviceFirmware DeviceFirmware[]

  @@unique([board, usage, framework, versionSemver])
}

model Device {
  id              String             @id
  created         DateTime           @default(now())
  updated         DateTime           @updatedAt
  board           BoardType
  usage           DeviceUsage
  framework       FirmwareFramework?
  label           String             @db.VarChar(20) // e.g. W1, K1, D2
  certificatePem  String?
  connected       Boolean            @default(false)
  lastSeen        DateTime?
  actuator        DeviceActuator?
  firmware        DeviceFirmware?
  DeviceTelemetry DeviceTelemetry[]
}

model DeviceActuator {
  device          Device    @relation(fields: [deviceId], references: [id])
  deviceId        String    @id
  enabled         Boolean   @default(false)
  duration        Int?
  equilibriumTime Int?
  target          Int?
  count           Int?
  lastTime        DateTime?
  totalDuration   Int?
}

model DeviceFirmware {
  device            Device             @relation(fields: [deviceId], references: [id])
  deviceId          String             @id
  currentVersion    String?
  desiredVersion    String?
  desiredFirmwareId String?
  desiredFirmware   AvailableFirmware? @relation(fields: [desiredFirmwareId], references: [id])
}

model DeviceTelemetry {
  id          String      @id
  device      Device      @relation(fields: [deviceId], references: [id])
  deviceId    String
  usage       DeviceUsage
  created     DateTime
  received    DateTime?
  temperature Float?
  humidity    Float?
  moisture    Float?
  ph          Float?

  @@index([deviceId, created])
  @@index([deviceId, received])
  @@index([usage, created])
}
